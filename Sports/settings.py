"""
Django settings for Sports project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import environ
env = environ.Env()
environ.Env.read_env()
from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-$e!c4qbaj$02-doflv)y-zh4cy1=9=4uyp4f%k)enia#*3l#$%'
SECRET_KEY = env('SECRET_KEY')


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['sports-chek.onrender.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'login',
    'superuser',
    
]

MIDDLEWARE = [
    #'django.middleware.security.SecurityMiddleware',
     'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Sports.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Sports.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME':'Sports',
#         'USER':'postgres',
#         'PASSWORD':'wq1607$$',
#         'HOST':'Localhost',
#         'PORT' : '5432',
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME':env('DBNAME'),
        'USER':env('USERNAME'),
        'PASSWORD':env('PASSWORD'),
        'HOST':env('HOST'),
        'PORT' : env('PORT'),
    }
}



# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL="login.CustomUser"
# ACCOUNT_SID='AC840de5535c88dd8135a4ea25c726f14c'
ACCOUNT_SID = env('ACCOUNT_SID')
# AUTH_TOKEN='596d81a61c974a357963d65e8861e6e7'
AUTH_TOKEN = env('AUTH_TOKEN')
COUNTRY_CODE='+91'
TWILIO_WHATSAPP_NUMBER='whatsapp:+14155238886'
TWILIO_PHONE_NUMBER='+13143507005'
AUTHENTICATION_BACKENDS = ('login.backends.CustomUserBackend','django.contrib.auth.backends.ModelBackend',)


STATICFILES_DIRS = [
    os.path.join(BASE_DIR,'static'),
]

MEDIA_ROOT  = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
LOGOUT_REDIRECT_URL = "my_url" 



# razor_pay_key_id='rzp_test_xCvV0RihrwVFik'
razor_pay_key_id=env('razor_pay_api_key_id')

# key_secret='CJcWxRCWF0yDuCla7DzzG5HY'
key_secret=env('key_secret')


# settings.py
# WSGI_APPLICATION = 'Sports.wsgi.application'

# ...

# Add the following line at the end of the file
try:
    import django_heroku
    django_heroku.settings(locals())
except:
    pass

# ...

# Uncomment the following line to use Waitress as the HTTP server
# WSGI_APPLICATION = 'your_project_name.wsgi:application'
